{"version":3,"sources":["components/Fields/Email.js","components/Welcome/ForgotPass/forgotPass.module.css","components/Welcome/ForgotPass/ForgotPass.js"],"names":["Email","_ref","getFieldDecorator","_ref$initialValue","initialValue","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","antd_es_form_FormItem__WEBPACK_IMPORTED_MODULE_5__","rules","type","message","required","antd_es_input__WEBPACK_IMPORTED_MODULE_1__","prefix","antd_es_icon__WEBPACK_IMPORTED_MODULE_3__","style","color","placeholder","module","exports","submit","loginRegisterContainer","FormItem","antd_es_form__WEBPACK_IMPORTED_MODULE_13__","Item","ForgotPass","props","_this","Object","E_Projects_Shuttle_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__","this","E_Projects_Shuttle_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_8__","E_Projects_Shuttle_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_9__","call","state","loading","handleSubmit","bind","E_Projects_Shuttle_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_10__","e","_this2","preventDefault","form","validateFields","err","email","setState","AuthService","then","_ref2","data","success","catch","error","response","finally","antIcon","react__WEBPACK_IMPORTED_MODULE_14___default","antd_es_icon__WEBPACK_IMPORTED_MODULE_5__","fontSize","spin","antd_es_spin__WEBPACK_IMPORTED_MODULE_1__","spinning","indicator","delay","textAlign","onSubmit","_Fields_Email__WEBPACK_IMPORTED_MODULE_19__","antd_es_button__WEBPACK_IMPORTED_MODULE_3__","htmlType","className","styles","react_router_dom__WEBPACK_IMPORTED_MODULE_17__","to","React","Component","Page","WrappedForgotPass","create","connect","pages_Welcome_Welcome__WEBPACK_IMPORTED_MODULE_18__"],"mappings":"uJA0BeA,IArBD,SAAAC,GAA0C,IAAxCC,EAAwCD,EAAxCC,kBAAwCC,EAAAF,EAArBG,oBAAqB,IAAAD,EAAR,GAAQA,EACpD,OACIE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACKN,EAAkB,QAAS,CACxBO,MAAO,CACH,CAACC,KAAM,QAASC,QAAS,iCACzB,CAACC,UAAU,EAAMD,QAAS,6BAE9BP,gBALHF,CAOGG,EAAAC,EAAAC,cAAAM,EAAA,GAAOC,OAAQT,EAAAC,EAAAC,cAAAQ,EAAA,GAAML,KAAK,OAAOM,MAAO,CAACC,MAAO,qBAAuBC,YAAY,mCCdnGC,EAAAC,QAAA,CAAkBC,OAAA,2BAAAC,uBAAA,8SCSZC,EAAWC,EAAA,EAAKC,KAEhBC,cAEJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,SAAS,GAGXR,EAAKS,aAAeT,EAAKS,aAAaC,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IANHA,4EASNY,GAAG,IAAAC,EAAAV,KACdS,EAAEE,iBACaX,KAAKJ,MAAbgB,KACFC,eAAe,SAACC,EAAD5C,GAAkB,IAAX6C,EAAW7C,EAAX6C,MACpBD,IACHJ,EAAKM,SAAS,CAACX,SAAS,IACxBY,IAA0B,CAACF,UACxBG,KAAK,SAAAC,GAAY,IAAVC,EAAUD,EAAVC,KACNxC,UAAQyC,QAAQD,EAAKxC,WAEtB0C,MAAM,SAAAR,GACLlC,UAAQ2C,MAAMT,EAAIU,SAASJ,KAAKxC,WAEjC6C,QAAQ,WACPf,EAAKM,SAAS,CAACX,SAAS,0CAMzB,IACAlC,EAAqB6B,KAAKJ,MAAMgB,KAAhCzC,kBACAkC,EAAWL,KAAKI,MAAhBC,QACDqB,EAAUC,EAAApD,EAAAC,cAAAoD,EAAA,GAAMjD,KAAK,UAAUM,MAAO,CAAC4C,SAAU,IAAKC,MAAI,IAEhE,OACEH,EAAApD,EAAAC,cAAAuD,EAAA,GAAMC,SAAU3B,EAAS4B,UAAWP,EAASQ,MAAO,KAClDP,EAAApD,EAAAC,cAAA,MAAIS,MAAO,CAACkD,UAAW,WAAvB,kBACAR,EAAApD,EAAAC,cAAAiB,EAAA,GAAM2C,SAAUpC,KAAKM,cACnBqB,EAAApD,EAAAC,cAAC6D,EAAA,EAAD,CAAOlE,kBAAmBA,IAC1BwD,EAAApD,EAAAC,cAACgB,EAAD,KACEmC,EAAApD,EAAAC,cAAA8D,EAAA,GACE3D,KAAK,UACL4D,SAAS,SACTC,UAAWC,IAAOnD,QAHpB,SAOAqC,EAAApD,EAAAC,cAAA,OAAKgE,UAAWC,IAAOlD,wBACrBoC,EAAApD,EAAAC,cAACkE,EAAA,EAAD,CAAMC,GAAI,KAAV,UACAhB,EAAApD,EAAAC,cAACkE,EAAA,EAAD,CAAMC,GAAI,aAAV,uBAnDWC,IAAMC,WAiEhBC,UALF,WACX,IAAMC,EAAoBtD,EAAA,EAAKuD,QAALvD,CAAcwD,cAAUtD,IAClD,OAAOgC,EAAApD,EAAAC,cAAC0E,EAAA,EAAD,KAASvB,EAAApD,EAAAC,cAACuE,EAAD","file":"static/js/9.ac83c7b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Icon } from 'antd';\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nconst Email = ({getFieldDecorator, initialValue=''}) => {\r\n    return (\r\n        <FormItem>\r\n            {getFieldDecorator('email', {\r\n                rules: [\r\n                    {type: 'email', message: 'The input is not valid Email!'},\r\n                    {required: true, message: 'Please input your Email!'}\r\n                ],\r\n                initialValue\r\n            })(\r\n                <Input prefix={<Icon type=\"mail\" style={{color: 'rgba(0,0,0,.25)'}}/>} placeholder=\"Email\"/>\r\n            )}\r\n        </FormItem>\r\n    );\r\n};\r\n\r\nEmail.propTypes = {\r\n    getFieldDecorator: PropTypes.func.isRequired,\r\n    initialValue: PropTypes.string\r\n};\r\n\r\nexport default Email;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"forgotPass_submit__1HYpt\",\"loginRegisterContainer\":\"forgotPass_loginRegisterContainer__2FW55\"};","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {message} from \"antd/lib/index\";\nimport {Link} from \"react-router-dom\";\nimport {Button, Form, Icon, Spin} from \"antd\";\nimport Welcome from \"pages/Welcome/Welcome\";\nimport Email from \"../../Fields/Email\";\nimport * as AuthService from 'services/auth';\nimport styles from './forgotPass.module.css';\n\nconst FormItem = Form.Item;\n\nclass ForgotPass extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const {form} = this.props;\n    form.validateFields((err, {email}) => {\n      if (!err) {\n        this.setState({loading: true});\n        AuthService.resetPassword({email})\n          .then(({data}) => {\n            message.success(data.message);\n          })\n          .catch(err => {\n            message.error(err.response.data.message);\n          })\n          .finally(() => {\n            this.setState({loading: false});\n          });\n      }\n    });\n  }\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    const {loading} = this.state;\n    const antIcon = <Icon type=\"loading\" style={{fontSize: 24}} spin/>;\n\n    return (\n      <Spin spinning={loading} indicator={antIcon} delay={150}>\n        <h1 style={{textAlign: 'center'}}>Reset password</h1>\n        <Form onSubmit={this.handleSubmit}>\n          <Email getFieldDecorator={getFieldDecorator}/>\n          <FormItem>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className={styles.submit}\n            >\n              Reset\n            </Button>\n            <div className={styles.loginRegisterContainer}>\n              <Link to={'/'}>Log in</Link>\n              <Link to={'/register'}>Register</Link>\n            </div>\n          </FormItem>\n        </Form>\n      </Spin>\n    );\n  }\n}\n\nconst Page = () => {\n  const WrappedForgotPass = Form.create()(connect()(ForgotPass));\n  return <Welcome><WrappedForgotPass/></Welcome>\n};\n\nexport default Page;\n"],"sourceRoot":""}