{"version":3,"sources":["components/Login/login.module.css","pages/Home/home.module.css","pages/Welcome/welcome.module.css","components/ForgotPass/forgotPass.module.css","components/ResetPass/resetPass.module.css","components/Register/register.module.css","components/Loader/loader.module.css","serviceWorker.js","store/actionTypes/auth.js","store/reducers/auth.js","store/reducers/index.js","store/middlewares/logout.js","store/index.js","store/actions/auth.js","Http.js","services/auth.js","components/Fields/Password.js","components/Fields/Remember.js","components/Fields/Username.js","components/Login/Login.js","pages/Welcome/Welcome.js","pages/Home/Home.js","components/Fields/Email.js","components/Fields/Confirm.js","components/Register/Register.js","components/ForgotPass/ForgotPass.js","components/ResetPass/ResetPass.js","routes/routes.js","routes/Public.js","routes/Private.js","routes/index.js","components/Loader/Loader.js","index.js"],"names":["module","exports","rememberForgotContainer","loginRegisterContainer","login","header","container","logout","welcome","card","submit","registerLoginContainer","right-1","right-2","right-3","right-4","right-5","Boolean","window","location","hostname","match","AUTH_LOGIN","AUTH_LOGOUT","initialState","isAuthenticated","instagramProfiles","user","auth","state","payload","Object","objectSpread","Auth","arguments","length","undefined","_ref","type","_ref$payload","ActionTypes","RootReducer","combineReducers","store","next","action","localStorage","removeItem","createStore","applyMiddleware","thunk","authLogin","authLogout","token","document","head","querySelector","axios","defaults","headers","common","content","concat","getItem","interceptors","response","use","error","status","dispatch","actions","Promise","reject","isRefreshing","request","asyncToGenerator","regenerator_default","a","mark","_callee","config","wrap","_context","prev","hasOwnProperty","moment","format","resolve","Http","post","refreshToken","then","_ref4","data","expiresIn","setTokens","catch","err","Cancel","Authorization","abrupt","stop","this","_x","apply","accessToken","setItem","remember","objectWithoutProperties","_ref2","resetPassword","credentials","_ref5","message","_ref6","updatePassword","_ref7","statusCode","register","_ref8","Password","getFieldDecorator","fieldName","validator","react_default","createElement","FormItem","rules","required","max","min","input","prefix","icon","style","color","placeholder","defaultProps","Remember","onChange","Fragment","valuePropName","initialValue","es_checkbox","Username","Login","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loading","handleSubmit","bind","assertThisInitialized","changeRemember","setState","prevState","e","_this2","preventDefault","_this$props","form","history","validateFields","username","password","push","antIcon","fontSize","spin","spinning","indicator","textAlign","es_form","onSubmit","Fields_Username","Fields_Password","validateToNextPassword","className","styles","Fields_Remember","Link","to","es_button","htmlType","React","Component","Form","create","connect","bindActionCreators","AuthService","withRouter","Welcome","children","components_Login_Login","onClick","Email","Confirm","onBlur","Register","confirmDirty","handleConfirmBlur","compareToFirstPassword","validateFieldsAndScroll","email","confirm","password_confirmation","success","value","target","rule","callback","getFieldValue","force","delay","Fields_Email","Fields_Confirm","mapDispatchToProps","Page","WrappedRegister","pages_Welcome_Welcome","Item","ForgotPass","ForgotPass_FormItem","WrappedForgotPass","ResetPass","params","replace","routes","path","exact","component","Home","WrappedResetPass","rest","Route","assign","render","Redirect","pathname","from","es_Redirect","Routes","BrowserRouter","Switch","map","route","i","Private","key","Public","Loader","components_Loader_Loader","getElementById","_ref3","Provider","src_routes","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae211acf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rememberForgotContainer\":\"login_rememberForgotContainer__3wmGY\",\"loginRegisterContainer\":\"login_loginRegisterContainer__3WToi\",\"login\":\"login_login__zJhdY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"home_header__3ZGQA\",\"container\":\"home_container__31p8Y\",\"logout\":\"home_logout__mREXz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"welcome\":\"welcome_welcome__11Kmz\",\"card\":\"welcome_card__3d3Za\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"forgotPass_submit__1AzMa\",\"loginRegisterContainer\":\"forgotPass_loginRegisterContainer__29CcY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"resetPass_submit__274Zz\",\"loginRegisterContainer\":\"resetPass_loginRegisterContainer__yVlka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerLoginContainer\":\"register_registerLoginContainer__Tdr9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"loader_container__1gwmP\",\"right-1\":\"loader_right-1__3kpKV\",\"right-2\":\"loader_right-2__2X1RC\",\"right-3\":\"loader_right-3__eyetX\",\"right-4\":\"loader_right-4__1uCYA\",\"right-5\":\"loader_right-5__FkRaO\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nexport const AUTH_LOGIN = 'AUTH_LOGIN';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import * as ActionTypes from '../actionTypes/auth'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    instagramProfiles: [],\r\n    user: {}\r\n};\r\n\r\nconst Auth = (state = initialState, {type, payload = null}) => {\r\n    switch (type) {\r\n        case ActionTypes.AUTH_LOGIN:\r\n            return auth(state, payload);\r\n        case ActionTypes.AUTH_LOGOUT:\r\n            return logout(state);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst auth = (state, payload) => {\r\n    state = {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: payload,\r\n    };\r\n\r\n    return state;\r\n};\r\n\r\nconst logout = (state) => {\r\n    state = {\r\n        ...state,\r\n        isAuthenticated: false\r\n    };\r\n\r\n    return state;\r\n};\r\n\r\nexport default Auth;","import {combineReducers} from 'redux'\r\nimport auth from \"./auth\";\r\n\r\n\r\nconst RootReducer = combineReducers({\r\n    auth\r\n});\r\n\r\n\r\nexport default RootReducer;","import * as ActionTypes from '../actionTypes/auth'\r\n\r\nconst logout = store => next => action => {\r\n    if(action.type === ActionTypes.AUTH_LOGOUT) {\r\n        localStorage.removeItem('expiresIn');\r\n        localStorage.removeItem('accessToken');\r\n        localStorage.removeItem('refreshToken');\r\n    }\r\n    return next(action);\r\n};\r\n\r\nexport default logout;","import {applyMiddleware,createStore} from 'redux';\r\nimport RootReducer from './reducers/index';\r\nimport thunk from 'redux-thunk';\r\nimport logout from './middlewares/logout';\r\n\r\nconst store = createStore(\r\n    RootReducer,\r\n    applyMiddleware(thunk, logout)\r\n);\r\n\r\nexport default store;","import * as ActionTypes from '../actionTypes/auth'\r\n\r\nexport function authLogin(payload){\r\n    return {\r\n        type: ActionTypes.AUTH_LOGIN,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function authLogout(){\r\n    return {\r\n        type: ActionTypes.AUTH_LOGOUT\r\n    }\r\n}","import axios from 'axios';\r\nimport store from './store';\r\nimport * as actions from './store/actions/auth';\r\nimport * as AuthService from './services/auth';\r\nimport moment from 'moment';\r\n\r\n\r\nconst token = document.head.querySelector('meta[name=\"csrf-token\"]');\r\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\naxios.defaults.headers.common['X-CSRF-TOKEN'] = token.content;\r\naxios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('accessToken')}`;\r\n\r\naxios.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n        if (error.response.status === 401)\r\n            store.dispatch(actions.authLogout());\r\n\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nlet isRefreshing = false;\r\n\r\naxios.interceptors.request.use(\r\n    async config => {\r\n        //before every request, we check the access token for validity\r\n        //if it is not valid we send a refresh token\r\n        //isRefreshing variable is needed to prevent recursion\r\n        if (localStorage.hasOwnProperty('expiresIn') &&\r\n            localStorage.getItem('expiresIn') < moment().format('X') &&\r\n            !isRefreshing\r\n        ) {\r\n            isRefreshing = true;\r\n            await AuthService.refresh().catch(() => {\r\n                //if an error was received, we interrupt the execution of requests\r\n                throw new axios.Cancel();\r\n            });\r\n            isRefreshing = false;\r\n\r\n            //Next request is sent with a new token\r\n            config.headers.Authorization = `Bearer ${localStorage.getItem('accessToken')}`;\r\n        }\r\n\r\n        return Promise.resolve(config);\r\n    }\r\n);\r\n\r\nexport default axios;","import Http from '../Http'\r\nimport * as action from '../store/actions/auth'\r\n\r\nfunction setTokens(expiresIn, accessToken, refreshToken) {\r\n    localStorage.setItem('accessToken', accessToken);\r\n    localStorage.setItem('expiresIn', expiresIn);\r\n    localStorage.setItem('refreshToken', refreshToken);\r\n}\r\n\r\nexport function login({remember, ...data}) {\r\n    return dispatch => (\r\n        new Promise((resolve, reject) => {\r\n                Http.post('/api/v1/auth/login', data)\r\n                    .then(({data}) => {\r\n                        const {\r\n                            token,\r\n                            expiresIn,\r\n                            refreshToken,\r\n                            user\r\n                        } = data;\r\n                        dispatch(action.authLogin(user));\r\n\r\n                        if (remember)\r\n                            setTokens(expiresIn, token, refreshToken);\r\n                        Http.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n                    })\r\n                    .catch(err => reject(err))\r\n            }\r\n        ));\r\n}\r\n\r\nexport function logout() {\r\n    return dispatch => (\r\n        Http.post('/api/v1/auth/logout', {\r\n            refreshToken: localStorage.getItem('refreshToken')\r\n        }).then(() => dispatch(action.authLogout()))\r\n    )\r\n}\r\n\r\nexport function me() {\r\n    return dispatch => (\r\n        new Promise((resolve, reject) => {\r\n                Http.post('/api/v1/auth/me')\r\n                    .then(({data}) => {\r\n                        dispatch(action.authLogin(data.user));\r\n\r\n                        resolve(data);\r\n                    })\r\n                    .catch(err => reject(err))\r\n            }\r\n        ));\r\n}\r\n\r\nexport function refresh() {\r\n    return new Promise((resolve, reject) => {\r\n        Http.post('/api/v1/auth/refresh', {\r\n            refreshToken: localStorage.getItem('refreshToken')\r\n        })\r\n            .then(({data}) => {\r\n                const {\r\n                    token,\r\n                    expiresIn,\r\n                    refreshToken,\r\n                } = data;\r\n\r\n                setTokens(expiresIn, token, refreshToken);\r\n                Http.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n                resolve(data);\r\n            })\r\n            .catch(err => reject(err))\r\n    });\r\n}\r\n\r\nexport function resetPassword(credentials) {\r\n    return dispatch => (\r\n        new Promise((resolve, reject) => {\r\n            Http.post('/api/v1/auth/password/reset', credentials)\r\n                .then(({data}) => {\r\n                    return resolve(data.message)\r\n                })\r\n                .catch(({response}) => {\r\n                    return reject(response.data.message)\r\n                })\r\n        })\r\n    )\r\n}\r\n\r\nexport function updatePassword(credentials) {\r\n    return dispatch => (\r\n        new Promise((resolve, reject) => {\r\n            Http.post('/api/v1/auth/password/update', credentials)\r\n                .then(({data}) => {\r\n                    return resolve(data.message);\r\n                })\r\n                .catch(err => {\r\n                    const data = {\r\n                        message: err.response.data.message,\r\n                        statusCode: err.response.status,\r\n                    };\r\n                    return reject(data);\r\n                })\r\n        })\r\n    )\r\n}\r\n\r\nexport function register(data) {\r\n    return dispatch => (\r\n        new Promise((resolve, reject) => {\r\n            Http.post('/api/v1/auth/register', data)\r\n                .then(({data}) => resolve(data))\r\n                .catch(err => reject(err.response.data))\r\n        })\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Input, Icon} from 'antd';\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nconst Password = ({getFieldDecorator, fieldName, validator}) => {\r\n    return (\r\n        <FormItem>\r\n            {getFieldDecorator(fieldName, {\r\n                rules: [\r\n                    {required: true, message: 'Please input your password!'},\r\n                    {max: 32, message: 'Password must be less than 32 characters!'},\r\n                    {min: 6, message: 'Password must be at least 6 characters!'},\r\n                    {validator}\r\n                ]\r\n            })(\r\n                <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\r\n                       placeholder=\"Password\"/>\r\n            )}\r\n        </FormItem>\r\n    );\r\n};\r\n\r\nPassword.defaultProps = {\r\n    fieldName: 'password'\r\n};\r\n\r\nexport default Password;","import React from \"react\";\r\nimport {Checkbox} from 'antd';\r\n\r\nconst Remember = ({getFieldDecorator, remember, onChange}) => {\r\n    return (\r\n        <>\r\n            {getFieldDecorator('remember', {\r\n                valuePropName: 'checked',\r\n                initialValue: remember,\r\n            })(\r\n                <Checkbox onChange={onChange}>Remember me</Checkbox>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Remember;","import React from \"react\";\r\nimport { Input, Icon } from 'antd';\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nconst Username = ({getFieldDecorator, fieldName}) => {\r\n    return (\r\n        <FormItem>\r\n            {getFieldDecorator(fieldName, {\r\n                rules: [\r\n                    {required: true, message: 'Please input your username!'},\r\n                    {max: 16, message: 'Username must be less than 16 characters!'},\r\n                    {min: 1, message: 'Username must be at least 2 characters!'}\r\n                    ],\r\n            })(\r\n                <Input prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                       placeholder=\"Username\"/>\r\n            )}\r\n        </FormItem>\r\n    );\r\n};\r\n\r\nUsername.defaultProps = {\r\n    fieldName: 'username'\r\n};\r\n\r\nexport default Username;","import {\r\n    Button,\r\n    Form, Icon, Spin\r\n} from 'antd';\r\nimport React from \"react\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport * as AuthService from \"../../services/auth\";\r\nimport {connect} from \"react-redux\";\r\nimport {message} from \"antd/lib/index\";\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport Password from \"../Fields/Password\";\r\nimport Remember from \"../Fields/Remember\";\r\nimport Username from \"../Fields/Username\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\nimport styles from './login.module.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            remember: true\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.changeRemember = this.changeRemember.bind(this);\r\n    }\r\n\r\n    changeRemember() {\r\n        this.setState((prevState) => ({remember: !prevState.remember}));\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const {form, login, history} = this.props;\r\n        const {remember} = this.state;\r\n\r\n        form.validateFields((err, {username, password}) => {\r\n            if (!err) {\r\n                this.setState({loading: true});\r\n                login({username, password, remember})\r\n                    .then(() => history.push('/home'))\r\n                    .catch(err => {\r\n                        this.setState({loading: false});\r\n                        message.error(err.response.data.message);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {getFieldDecorator} = this.props.form;\r\n        const antIcon = <Icon type=\"loading\" style={{fontSize: 24}} spin/>;\r\n        const {remember} = this.state;\r\n\r\n        return (\r\n            <Spin spinning={this.state.loading} indicator={antIcon}>\r\n                <h1 style={{textAlign: 'center'}}>Login</h1>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Username getFieldDecorator={getFieldDecorator}/>\r\n                    <Password\r\n                        getFieldDecorator={getFieldDecorator}\r\n                        validator={this.validateToNextPassword}\r\n                    />\r\n                    <FormItem>\r\n                        <div className={styles.rememberForgotContainer}>\r\n                            <Remember getFieldDecorator={getFieldDecorator}\r\n                                      remember={remember}\r\n                                      onChange={this.changeRemember}\r\n                            />\r\n                            <Link to={'/password-reset'}>Forgot password</Link>\r\n                        </div>\r\n                        <div className={styles.loginRegisterContainer}>\r\n                            <Button className={styles.login}\r\n                                    type=\"primary\"\r\n                                    htmlType=\"submit\"\r\n                            >\r\n                                Log in\r\n                            </Button>\r\n                            <Link to={'/register'}>Register now!</Link>\r\n                        </div>\r\n                    </FormItem>\r\n                </Form>\r\n            </Spin>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        login: AuthService.login,\r\n    }, dispatch);\r\n};\r\n\r\nexport default Form.create()(connect(null, mapDispatchToProps)(withRouter(Login)));","import React from \"react\";\r\nimport Login from \"../../components/Login/Login\";\r\nimport {Card} from 'antd';\r\nimport styles from './welcome.module.css';\r\n\r\nconst Welcome = props => {\r\n    return (\r\n        <div className={styles.welcome}>\r\n            <Card className={styles.card}>\r\n                {props.children}\r\n            </Card>\r\n        </div>\r\n    )\r\n};\r\n\r\nWelcome.defaultProps = {\r\n    children: <Login/>\r\n};\r\n\r\nexport default Welcome;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport * as AuthService from \"../../services/auth\";\r\nimport styles from './home.module.css';\r\n\r\nconst Home = props => {\r\n    return (\r\n        <>\r\n            <div className={styles.header}>\r\n                <button\r\n                    className={styles.logout}\r\n                    onClick={props.logout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n            <div className={styles.container}>\r\n                <h1>Homepage</h1>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        logout: AuthService.logout\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Home);","import React from \"react\";\r\nimport { Input, Icon } from 'antd';\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nconst Email = ({getFieldDecorator, initialValue}) => {\r\n    return (\r\n        <FormItem>\r\n            {getFieldDecorator('email', {\r\n                rules: [\r\n                    {type: 'email', message: 'The input is not valid Email!'},\r\n                    {required: true, message: 'Please input your Email!'}\r\n                ],\r\n                initialValue\r\n            })(\r\n                <Input prefix={<Icon type=\"mail\" style={{color: 'rgba(0,0,0,.25)'}}/>} placeholder=\"Email\"/>\r\n            )}\r\n        </FormItem>\r\n    );\r\n};\r\n\r\nEmail.defaultProps = {\r\n    initialValue: null\r\n};\r\n\r\nexport default Email;","import React from \"react\";\r\nimport { Icon, Input } from \"antd\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nconst Confirm = ({getFieldDecorator, validator, onBlur}) => {\r\n    return (\r\n        <FormItem>\r\n            {getFieldDecorator('confirm', {\r\n                rules: [{\r\n                    required: true, message: 'Please confirm your password!'\r\n                },\r\n                    {validator}\r\n                ]\r\n            })(\r\n                <Input prefix={<Icon type=\"eye\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                       type=\"password\" placeholder=\"Confirm password\" onBlur={onBlur}/>\r\n            )}\r\n        </FormItem>\r\n    );\r\n};\r\n\r\nexport default Confirm;","import React from \"react\";\r\nimport Welcome from \"../../pages/Welcome/Welcome\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport * as AuthService from \"../../services/auth\";\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport {message} from \"antd/lib/index\";\r\nimport Email from \"../Fields/Email\";\r\nimport Username from \"../Fields/Username\";\r\nimport Password from \"../Fields/Password\";\r\nimport Confirm from \"../Fields/Confirm\";\r\nimport {Form, Icon, Spin, Button} from \"antd\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\nimport styles from './register.module.css';\r\n\r\n\r\nclass Register extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            confirmDirty: false,\r\n            loading: false\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleConfirmBlur = this.handleConfirmBlur.bind(this);\r\n        this.compareToFirstPassword = this.compareToFirstPassword.bind(this);\r\n        this.validateToNextPassword = this.validateToNextPassword.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const {register, form, history} = this.props;\r\n\r\n        form.validateFieldsAndScroll((err, {\r\n            email, username, password, confirm\r\n        }) => {\r\n            if (!err) {\r\n                this.setState({loading: true});\r\n                register({\r\n                    email, username, password,\r\n                    password_confirmation: confirm\r\n                }).then(\r\n                    data => {\r\n                        message.success(data.message);\r\n                        this.setState({loading: false});\r\n                        history.push('/');\r\n                    }\r\n                ).catch(data => {\r\n                    this.setState({loading: false});\r\n                    message.error(data.message);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleConfirmBlur(e) {\r\n        const value = e.target.value;\r\n        this.setState({confirmDirty: this.state.confirmDirty || !!value});\r\n    }\r\n\r\n    compareToFirstPassword(rule, value, callback) {\r\n        const form = this.props.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n            callback('Two passwords that you enter is inconsistent!');\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    validateToNextPassword(rule, value, callback) {\r\n        const form = this.props.form;\r\n        if (value && this.state.confirmDirty) {\r\n            form.validateFields(['confirm'], {force: true});\r\n        }\r\n        callback();\r\n    }\r\n\r\n    render() {\r\n        const {getFieldDecorator} = this.props.form;\r\n        const antIcon = <Icon type=\"loading\" style={{fontSize: 24}} spin/>;\r\n\r\n        return (\r\n            <Spin spinning={this.state.loading} indicator={antIcon} delay={150}>\r\n                <h1 style={{textAlign: 'center'}}>Register</h1>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Email getFieldDecorator={getFieldDecorator}/>\r\n                    <Username getFieldDecorator={getFieldDecorator}/>\r\n                    <Password\r\n                        getFieldDecorator={getFieldDecorator}\r\n                        validator={this.validateToNextPassword}\r\n                    />\r\n                    <Confirm\r\n                        getFieldDecorator={getFieldDecorator}\r\n                        validator={this.compareToFirstPassword}\r\n                        onBlur={this.handleConfirmBlur}\r\n                    />\r\n                    <FormItem>\r\n                        <div className={styles.registerLoginContainer}>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                            >\r\n                                Register\r\n                            </Button>\r\n                            <Link to={'/'}>Log in</Link>\r\n                        </div>\r\n                    </FormItem>\r\n                </Form>\r\n            </Spin>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        register: AuthService.register\r\n    }, dispatch);\r\n};\r\n\r\nconst Page = () => {\r\n    const WrappedRegister = Form.create()(connect(null, mapDispatchToProps)(withRouter(Register)));\r\n    return <Welcome><WrappedRegister/></Welcome>\r\n};\r\n\r\nexport default Page;","import React from \"react\";\r\nimport Welcome from \"../../pages/Welcome/Welcome\";\r\nimport * as AuthService from \"../../services/auth\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {message} from \"antd/lib/index\";\r\nimport Email from \"../Fields/Email\";\r\nimport {Form, Icon, Spin, Button} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styles from './forgotPass.module.css';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass ForgotPass extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const {form, resetPassword} = this.props;\r\n        form.validateFields((err, {email}) => {\r\n            if (!err) {\r\n                this.setState({loading: true});\r\n                resetPassword({email})\r\n                    .then(data => {\r\n                        this.setState({loading: false});\r\n                        message.success(data);\r\n                    })\r\n                    .catch(data => {\r\n                        this.setState({loading: false});\r\n                        message.error(data);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {getFieldDecorator} = this.props.form;\r\n        const {loading} = this.state;\r\n        const antIcon = <Icon type=\"loading\" style={{fontSize: 24}} spin/>;\r\n\r\n        return (\r\n            <Spin spinning={loading} indicator={antIcon} delay={150}>\r\n                <h1 style={{textAlign: 'center'}}>Reset password</h1>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Email getFieldDecorator={getFieldDecorator}/>\r\n                    <FormItem>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className={styles.submit}\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                        <div className={styles.loginRegisterContainer}>\r\n                            <Link to={'/'}>Log in</Link>\r\n                            <Link to={'/register'}>Register</Link>\r\n                        </div>\r\n                    </FormItem>\r\n                </Form>\r\n            </Spin>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        resetPassword: AuthService.resetPassword\r\n    }, dispatch);\r\n};\r\n\r\nconst Page = () => {\r\n    const WrappedForgotPass = Form.create()(connect(null, mapDispatchToProps)(ForgotPass));\r\n    return <Welcome><WrappedForgotPass/></Welcome>\r\n};\r\n\r\nexport default Page;","import React from \"react\";\r\nimport Welcome from \"../../pages/Welcome/Welcome\";\r\nimport * as AuthService from \"../../services/auth\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {message} from \"antd/lib/index\";\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport Confirm from \"../Fields/Confirm\";\r\nimport Password from \"../Fields/Password\";\r\nimport Email from \"../Fields/Email\";\r\nimport {Form, Icon, Spin, Button} from \"antd\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\nimport styles from './resetPass.module.css';\r\n\r\nclass ResetPass extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleConfirmBlur = this.handleConfirmBlur.bind(this);\r\n        this.compareToFirstPassword = this.compareToFirstPassword.bind(this);\r\n        this.validateToNextPassword = this.validateToNextPassword.bind(this);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const {form, updatePassword, match, history} = this.props;\r\n        form.validateFields((err, {password, confirm}) => {\r\n            if (!err) {\r\n                this.setState({loading: true});\r\n                updatePassword({\r\n                    email: match.params.email.replace(\"29gnmLTv686QsnV\", \"@\"),\r\n                    token: match.params.token,\r\n                    password_confirmation: confirm,\r\n                    password,\r\n                }).then(data => {\r\n                    this.setState({loading: false});\r\n                    message.success(data);\r\n                    history.push('/');\r\n                }).catch(err => {\r\n                    this.setState({loading: false});\r\n                    message.error(err.message);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleConfirmBlur(e) {\r\n        const value = e.target.value;\r\n        this.setState({confirmDirty: this.state.confirmDirty || !!value});\r\n    }\r\n\r\n    compareToFirstPassword(rule, value, callback) {\r\n        const form = this.props.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n            callback('Two passwords that you enter is inconsistent!');\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    validateToNextPassword(rule, value, callback) {\r\n        const form = this.props.form;\r\n        if (value && this.state.confirmDirty) {\r\n            form.validateFields(['confirm'], {force: true});\r\n        }\r\n        callback();\r\n    }\r\n\r\n    render() {\r\n        const {getFieldDecorator} = this.props.form;\r\n        const antIcon = <Icon type=\"loading\" style={{fontSize: 24}} spin/>;\r\n\r\n        return (\r\n            <Spin spinning={this.state.loading} indicator={antIcon} delay={150}>\r\n                <h1 style={{textAlign: 'center'}}>Reset password</h1>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Email\r\n                        getFieldDecorator={getFieldDecorator}\r\n                        initialValue={this.props.match.params.email.replace(\"29gnmLTv686QsnV\", \"@\")}\r\n                    />\r\n                    <Password\r\n                        getFieldDecorator={getFieldDecorator}\r\n                        validator={this.validateToNextPassword}\r\n                    />\r\n                    <Confirm\r\n                        getFieldDecorator={getFieldDecorator}\r\n                        validator={this.compareToFirstPassword}\r\n                        onBlur={this.handleConfirmBlur}\r\n                    />\r\n                    <FormItem>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className={styles.submit}\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                        <div className={styles.loginRegisterContainer}>\r\n                            <Link to={'/'}>Log in</Link>\r\n                            <Link to={'/register'}>Register</Link>\r\n                        </div>\r\n                    </FormItem>\r\n                </Form>\r\n            </Spin>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        updatePassword: AuthService.updatePassword,\r\n    }, dispatch);\r\n};\r\n\r\nconst Page = props => {\r\n    const WrappedResetPass = Form.create()(connect(null, mapDispatchToProps)(withRouter(ResetPass)));\r\n    return <Welcome><WrappedResetPass {...props}/></Welcome>\r\n};\r\n\r\nexport default Page;","import Welcome from '../pages/Welcome/Welcome'\r\nimport Home from '../pages/Home/Home'\r\nimport Register from '../components/Register/Register'\r\nimport ForgotPass from '../components/ForgotPass/ForgotPass'\r\nimport ResetPass from '../components/ResetPass/ResetPass'\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        auth: false,\r\n        component: Welcome\r\n    },\r\n    {\r\n        path: '/home',\r\n        exact: true,\r\n        auth: true,\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        auth: false,\r\n        component: Welcome\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        auth: false,\r\n        component: Register\r\n    },\r\n    {\r\n        path: '/password-reset',\r\n        exact: true,\r\n        auth: false,\r\n        component: ForgotPass\r\n    },\r\n    {\r\n        path: '/password-update/:token/:email',\r\n        exact: true,\r\n        auth: false,\r\n        component: ResetPass\r\n    }\r\n];","import React from 'react'\r\nimport {Route} from 'react-router'\r\nimport {connect} from \"react-redux\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nconst PublicRoute = ({component: Component, isAuthenticated, ...rest}) => (\r\n    <Route {...rest} render={props => (\r\n        !isAuthenticated ? (\r\n            <main>\r\n                <Component {...props}/>\r\n            </main>\r\n        ) : (\r\n            <Redirect to={{\r\n                pathname: '/home',\r\n                state: {from: props.location}\r\n            }}/>\r\n        )\r\n    )}/>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated : state.auth.isAuthenticated\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React from 'react'\r\nimport {Route, Redirect} from 'react-router'\r\nimport {connect} from 'react-redux'\r\n\r\nconst PrivateRoute = ({component: Component, isAuthenticated, ...rest}) => (\r\n    <Route {...rest} render={props => (\r\n        isAuthenticated ? (\r\n            <main>\r\n                <Component {...props}/>\r\n            </main>\r\n        ) : (\r\n            <Redirect to={{\r\n                pathname: '/',\r\n                state: {from: props.location}\r\n            }}/>\r\n        )\r\n    )}/>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated : state.auth.isAuthenticated\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react'\r\nimport {BrowserRouter, Switch} from 'react-router-dom'\r\nimport {routes} from './routes'\r\nimport PublicRoute from \"./Public\";\r\nimport PrivateRoute from \"./Private\";\r\n\r\nconst Routes = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {\r\n                routes.map((route, i) => {\r\n                        if (route.auth)\r\n                            return <PrivateRoute key={i} {...route}/>;\r\n                        else\r\n                            return <PublicRoute key={i} {...route}/>;\r\n                    }\r\n                )}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;","import React from \"react\";\r\nimport styles from './loader.module.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <ul>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import './css/normalize.css';\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport store from './store';\nimport {render} from 'react-dom';\nimport Routes from \"./routes\";\nimport Provider from \"react-redux/es/components/Provider\";\nimport * as AuthService from './services/auth';\nimport Loader from \"./components/Loader/Loader\";\n\nvoid async function () {\n    if (localStorage.hasOwnProperty('accessToken')) {\n        render(\n            <Loader/>,\n            document.getElementById('root')\n        );\n\n        await store\n            .dispatch(AuthService.me())\n            .catch(() => {});\n    }\n\n    render(\n        <Provider store={store}>\n            <Routes/>\n        </Provider>,\n        document.getElementById('root')\n    );\n}();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}