{"version":3,"sources":["components/Fields/Email.js","components/Fields/Confirm.js","components/Welcome/Register/register.module.css","components/Welcome/Register/Register.js"],"names":["Email","_ref","getFieldDecorator","_ref$initialValue","initialValue","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","antd_es_form_FormItem__WEBPACK_IMPORTED_MODULE_5__","rules","type","message","required","antd_es_input__WEBPACK_IMPORTED_MODULE_1__","prefix","antd_es_icon__WEBPACK_IMPORTED_MODULE_3__","style","color","placeholder","Confirm","validator","onBlur","module","exports","registerLoginContainer","Register","props","_this","Object","E_Projects_Shuttle_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__","this","E_Projects_Shuttle_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_10__","E_Projects_Shuttle_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_11__","call","state","confirmDirty","loading","handleSubmit","bind","E_Projects_Shuttle_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_12__","handleConfirmBlur","compareToFirstPassword","validateToNextPassword","e","_this2","preventDefault","_this$props","form","history","validateFieldsAndScroll","err","email","username","password","confirm","setState","AuthService","password_confirmation","then","_ref2","data","success","push","catch","error","response","finally","value","target","rule","callback","getFieldValue","validateFields","force","antIcon","react__WEBPACK_IMPORTED_MODULE_14___default","antd_es_icon__WEBPACK_IMPORTED_MODULE_7__","fontSize","spin","antd_es_spin__WEBPACK_IMPORTED_MODULE_1__","spinning","indicator","delay","textAlign","antd_es_form__WEBPACK_IMPORTED_MODULE_3__","onSubmit","_Fields_Email__WEBPACK_IMPORTED_MODULE_21__","_Fields_Username__WEBPACK_IMPORTED_MODULE_22__","_Fields_Password__WEBPACK_IMPORTED_MODULE_23__","_Fields_Confirm__WEBPACK_IMPORTED_MODULE_24__","antd_es_form_FormItem__WEBPACK_IMPORTED_MODULE_20__","className","styles","antd_es_button__WEBPACK_IMPORTED_MODULE_5__","htmlType","react_router_dom__WEBPACK_IMPORTED_MODULE_17__","to","React","Component","Page","WrappedRegister","create","connect","withRouter","_pages_Welcome_Welcome__WEBPACK_IMPORTED_MODULE_15__"],"mappings":"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","file":"static/js/8.d3836162.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Icon } from 'antd';\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nconst Email = ({getFieldDecorator, initialValue=''}) => {\r\n    return (\r\n        <FormItem>\r\n            {getFieldDecorator('email', {\r\n                rules: [\r\n                    {type: 'email', message: 'The input is not valid Email!'},\r\n                    {required: true, message: 'Please input your Email!'}\r\n                ],\r\n                initialValue\r\n            })(\r\n                <Input prefix={<Icon type=\"mail\" style={{color: 'rgba(0,0,0,.25)'}}/>} placeholder=\"Email\"/>\r\n            )}\r\n        </FormItem>\r\n    );\r\n};\r\n\r\nEmail.propTypes = {\r\n    getFieldDecorator: PropTypes.func.isRequired,\r\n    initialValue: PropTypes.string\r\n};\r\n\r\nexport default Email;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Icon, Input } from \"antd\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\n\r\nconst Confirm = ({getFieldDecorator, validator, onBlur}) => {\r\n    return (\r\n        <FormItem>\r\n            {getFieldDecorator('confirm', {\r\n                rules: [{\r\n                    required: true, message: 'Please confirm your password!'\r\n                },\r\n                    {validator}\r\n                ]\r\n            })(\r\n                <Input prefix={<Icon type=\"eye\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                       type=\"password\" placeholder=\"Confirm password\" onBlur={onBlur}/>\r\n            )}\r\n        </FormItem>\r\n    );\r\n};\r\n\r\nConfirm.propTypes = {\r\n    getFieldDecorator: PropTypes.func.isRequired,\r\n    onBlur: PropTypes.func,\r\n    validator: PropTypes.func\r\n};\r\n\r\nexport default Confirm;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerLoginContainer\":\"register_registerLoginContainer__12owb\"};","import React from \"react\";\nimport Welcome from \"../../../pages/Welcome/Welcome\";\nimport {connect} from \"react-redux\";\nimport {Link, withRouter} from 'react-router-dom'\nimport {message} from \"antd/lib/index\";\nimport {Button, Form, Icon, Spin} from \"antd\";\nimport FormItem from \"antd/es/form/FormItem\";\nimport Email from \"../../Fields/Email\";\nimport {Username} from \"../../Fields/Username\";\nimport Password from \"../../Fields/Password\";\nimport Confirm from \"../../Fields/Confirm\";\nimport * as AuthService from 'services/auth';\nimport styles from './register.module.css';\n\n\nclass Register extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDirty: false,\n      loading: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleConfirmBlur = this.handleConfirmBlur.bind(this);\n    this.compareToFirstPassword = this.compareToFirstPassword.bind(this);\n    this.validateToNextPassword = this.validateToNextPassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const {form, history} = this.props;\n\n    form.validateFieldsAndScroll((err, {\n      email, username, password, confirm\n    }) => {\n      if (!err) {\n        this.setState({loading: true});\n        AuthService.register({\n          email, username, password,\n          password_confirmation: confirm\n        })\n          .then(\n            ({data}) => {\n              message.success(data.message);\n              history.push('/');\n            }\n          )\n          .catch(err => {\n            message.error(err.response.data.message);\n          })\n          .finally(() => {\n            this.setState({loading: false});\n          });\n      }\n    });\n  }\n\n  handleConfirmBlur(e) {\n    const value = e.target.value;\n    this.setState({confirmDirty: this.state.confirmDirty || !!value});\n  }\n\n  compareToFirstPassword(rule, value, callback) {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  }\n\n  validateToNextPassword(rule, value, callback) {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], {force: true});\n    }\n    callback();\n  }\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    const antIcon = <Icon type=\"loading\" style={{fontSize: 24}} spin/>;\n\n    return (\n      <Spin spinning={this.state.loading} indicator={antIcon} delay={150}>\n        <h1 style={{textAlign: 'center'}}>Register</h1>\n        <Form onSubmit={this.handleSubmit}>\n          <Email getFieldDecorator={getFieldDecorator}/>\n          <Username getFieldDecorator={getFieldDecorator}/>\n          <Password\n            getFieldDecorator={getFieldDecorator}\n            validator={this.validateToNextPassword}\n          />\n          <Confirm\n            getFieldDecorator={getFieldDecorator}\n            validator={this.compareToFirstPassword}\n            onBlur={this.handleConfirmBlur}\n          />\n          <FormItem>\n            <div className={styles.registerLoginContainer}>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                Register\n              </Button>\n              <Link to={'/'}>Log in</Link>\n            </div>\n          </FormItem>\n        </Form>\n      </Spin>\n    );\n  }\n}\n\nconst Page = () => {\n  const WrappedRegister = Form.create()(connect()(withRouter(Register)));\n  return <Welcome><WrappedRegister/></Welcome>\n};\n\nexport default Page;\n"],"sourceRoot":""}