{"version":3,"sources":["components/ExplainingLabels/ExplainingLabel.js","components/ExplainingLabels/explainingLabels.module.css","pages/Notifications/Notifications/notifications.module.css","pages/Notifications/SubscriptionRequests/UserCard/userCard.module.css","pages/Notifications/SubscriptionRequests/subReq.module.css","pages/Notifications/notifications.module.css","pages/Notifications/SubscriptionRequests/transitions.module.css","components/ExplainingLabels/NotificationsLabel/styles.module.css","pages/Notifications/Notifications/notificationBlank.module.css","pages/Notifications/Notifications/transitions.module.css","services/subscriptionRequests.js","pages/Notifications/SubscriptionRequests/UserCard/ButtonsContainer.js","pages/Notifications/SubscriptionRequests/UserCard/UserRequestCard.js","pages/Notifications/SubscriptionRequests/SubRequestsList.js","pages/Notifications/SubscriptionRequests/SubscriptionRequestsLabel.js","pages/Notifications/SubscriptionRequests/SubscriptionRequests.js","components/ExplainingLabels/NotificationsLabel/NotificationsExplainingLabel.js","pages/Notifications/Notifications/NotificationBlank.js","pages/Notifications/Notifications/BlanksList.js","pages/Notifications/Notifications/PostLink.js","pages/Notifications/Notifications/Notification.js","pages/Notifications/Notifications/NotificationsList.js","pages/Notifications/Notifications.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_explainingLabels_module_css__WEBPACK_IMPORTED_MODULE_1__","_explainingLabels_module_css__WEBPACK_IMPORTED_MODULE_1___default","ExplainingLabel","_ref","children","icon","text","a","createElement","className","styles","sectionContainer","iconContainer","sectionLabel","module","exports","notificationsList","media","postLink","notificationCard","comment","avatar","infoContainer","infoWrapper","timeContainer","usernameLink","title","userCardContainer","subContainer","actionButtons","subReqLabel","avatarContainer","subReqTitle","subsContainer","cardsContainer","notificationsContainer","leave","leaveActive","appear","appearActive","container","blink","avatarStub","usernameStub","infoStub","timeStub","postImgStub","acceptSubsRequest","user_id","Http","post","api","subRequests","cancelSubsRequest","userId","delete","concat","React","memo","id","deleteFromSubsList","_useState","useState","_useState2","Object","slicedToArray","acceptLoading","setAcceptLoading","_useState3","_useState4","cancelLoading","setCancelLoading","interactionWithSubRequest","loader","setStateCallback","then","catch","react_default","es_button","size","loading","onClick","user","username","Link","to","src","alt","DefaultAvatar","fontSize","UserCard_ButtonsContainer","undefined","requests","setRequests","useEffect","get","data","filter","item","Fragment","length","react_addons_css_transition_group_default","transitionName","transitions","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","transitionLeaveTimeout","map","UserCard_UserRequestCard","key","count","openList","badge","SubscriptionRequests","isListOpen","setIsListOpen","setAvatar","_useState5","_useState6","setCount","_ref$data","SubRequestsList","SubscriptionRequests_SubscriptionRequestsLabel","NotificationsExplainingLabel","type","random","min","max","rand","Math","floor","stylesBlank","style","width","notificationsBlanks","i","push","Notifications_NotificationBlank","getNotificationsBlanks","PostLink","link","postSrc","match","Notification","info","post_src","created_at","moment","Date","fromNow","Notifications_PostLink","connect","state","notificationsCount","auth","notifications","dispatch","firstLoading","setFirstLoading","fetchNotifications","useCallback","page","Notifications_BlanksList","Paginator","fetcher","index","Notifications_Notification","NotificationsLabel_NotificationsExplainingLabel","Notifications","Notifications_SubscriptionRequests_SubscriptionRequests","Notifications_NotificationsList"],"mappings":"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","file":"static/js/15.6f26db6f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles  from './explainingLabels.module.css';\r\n\r\nconst ExplainingLabel = ({children, icon, text}) => (\r\n    <div className={styles.sectionContainer}>\r\n        <div className={styles.iconContainer}>\r\n            {icon}\r\n        </div>\r\n        <span className={styles.sectionLabel}>{text}</span>\r\n        {children}\r\n    </div>\r\n);\r\n\r\nExplainingLabel.propTypes = {\r\n    children: PropTypes.element,\r\n    icon: PropTypes.element.isRequired,\r\n    text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ExplainingLabel;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionContainer\":\"explainingLabels_sectionContainer__1n9BX\",\"iconContainer\":\"explainingLabels_iconContainer__1r1N2\",\"sectionLabel\":\"explainingLabels_sectionLabel__Jgmvz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationsList\":\"notifications_notificationsList__1-p2v\",\"media\":\"notifications_media__2FjAF\",\"postLink\":\"notifications_postLink__icYQe\",\"notificationCard\":\"notifications_notificationCard__35ewz\",\"comment\":\"notifications_comment__19L_Y\",\"avatar\":\"notifications_avatar__3-4mO\",\"infoContainer\":\"notifications_infoContainer___PKJa\",\"infoWrapper\":\"notifications_infoWrapper__2zZK_\",\"timeContainer\":\"notifications_timeContainer__3rGyp\",\"usernameLink\":\"notifications_usernameLink__1zgax\",\"title\":\"notifications_title__T15Lp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userCardContainer\":\"userCard_userCardContainer__4XNbz\",\"subContainer\":\"userCard_subContainer__3sdXk\",\"actionButtons\":\"userCard_actionButtons__rOOPM\",\"avatar\":\"userCard_avatar__PVFxj\",\"usernameLink\":\"userCard_usernameLink__3ZJAl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subReqLabel\":\"subReq_subReqLabel__1m7Q3\",\"avatar\":\"subReq_avatar__1E-Ru\",\"avatarContainer\":\"subReq_avatarContainer__2yk3i\",\"infoContainer\":\"subReq_infoContainer__2J8G5\",\"subReqTitle\":\"subReq_subReqTitle__1LiIl\",\"subsContainer\":\"subReq_subsContainer__PKBiG\",\"title\":\"subReq_title__1SEV5\",\"cardsContainer\":\"subReq_cardsContainer__3bbzI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationsContainer\":\"notifications_notificationsContainer__1_l9J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leave\":\"transitions_leave__14fWt\",\"leaveActive\":\"transitions_leaveActive__2XlTe\",\"appear\":\"transitions_appear__1C8qK\",\"appearActive\":\"transitions_appearActive__YgUe_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__24gR4\",\"icon\":\"styles_icon__XMloT\",\"text\":\"styles_text__3wWl4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"notificationBlank_icon__2GGtC\",\"blink\":\"notificationBlank_blink__sewHQ\",\"avatarStub\":\"notificationBlank_avatarStub__2eXQT notificationBlank_icon__2GGtC\",\"usernameStub\":\"notificationBlank_usernameStub__2XaBf notificationBlank_icon__2GGtC\",\"infoContainer\":\"notificationBlank_infoContainer__1QqC- notificationBlank_icon__2GGtC\",\"infoStub\":\"notificationBlank_infoStub__OAyn7\",\"timeStub\":\"notificationBlank_timeStub__2DP3- notificationBlank_icon__2GGtC\",\"postImgStub\":\"notificationBlank_postImgStub__2YLHR notificationBlank_icon__2GGtC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leave\":\"transitions_leave__2Q0q9\",\"leaveActive\":\"transitions_leaveActive__1A__h\",\"appear\":\"transitions_appear__2q_4j\",\"appearActive\":\"transitions_appearActive__1QO7X\"};","import Http from \"../Http\";\nimport {api} from './api';\n\nexport const getSubsRequestsPreview = () => Http.get(`${api.subRequests}/preview`);\n\nexport const getSubsRequests = () => Http.get(api.subRequests);\n\nexport const acceptSubsRequest = (user_id) => Http.post(api.subRequests, {user_id});\n\nexport const cancelSubsRequest = (userId) => Http.delete(`${api.subRequests}?user_id=${userId}`);\n","import React, {useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport {Button} from \"antd\";\nimport {acceptSubsRequest, cancelSubsRequest} from \"services/subscriptionRequests\";\nimport styles from './userCard.module.css';\n\nconst ButtonsContainer = ({id, deleteFromSubsList}) => {\n\n  let [acceptLoading, setAcceptLoading] = useState(false);\n  let [cancelLoading, setCancelLoading] = useState(false);\n\n  const accept = () => interactionWithSubRequest(acceptSubsRequest, () => (setAcceptLoading(false)));\n\n  const cancel = () => interactionWithSubRequest(cancelSubsRequest, () => (setCancelLoading(true)));\n\n  const interactionWithSubRequest = (loader, setStateCallback) => {\n    setStateCallback();\n\n    loader(id)\n      .then(() => {\n        setStateCallback();\n        deleteFromSubsList(id);\n      }).catch(() => setStateCallback());\n  };\n\n  return (\n    <div className={styles.actionButtons}>\n      <Button size={'small'}\n              loading={acceptLoading}\n              onClick={accept}\n      >\n        Accept\n      </Button>\n      <Button size={'small'}\n              loading={cancelLoading}\n              onClick={cancel}\n      >\n        Deny\n      </Button>\n    </div>\n  );\n};\n\nButtonsContainer.propTypes = {\n  id: PropTypes.number.isRequired,\n  deleteFromSubsList: PropTypes.func.isRequired\n};\n\nexport default React.memo(ButtonsContainer);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\n\nimport ButtonsContainer from \"./ButtonsContainer\";\nimport DefaultAvatar from \"components/DefaultAvatar\";\n\nimport styles from './userCard.module.css';\n\nconst UserRequestCard = ({user, deleteFromSubsList}) => {\n\n  const {username, avatar} = user;\n\n  return (\n    <div className={styles.userCardContainer}>\n      <Link className={styles.avatar} to={`/${username}`}>\n        {\n          avatar ? <img src={avatar} alt={'avatar'}/> : <DefaultAvatar fontSize={'30px'}/>\n        }\n      </Link>\n      <div className={styles.subContainer}>\n        <Link to={`/${username}`} className={styles.usernameLink}>\n          {username}\n        </Link>\n        <ButtonsContainer id={user.id} deleteFromSubsList={deleteFromSubsList}/>\n      </div>\n    </div>\n  );\n};\n\nUserRequestCard.propTypes = {\n  user: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    avatar: PropTypes.string\n  }),\n  deleteFromSubsList: PropTypes.func.isRequired\n};\n\nexport default React.memo(UserRequestCard);\n","import React, {useEffect, useState} from \"react\";\nimport UserRequestCard from \"./UserCard/UserRequestCard\";\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport {getSubsRequests} from \"services/subscriptionRequests\";\nimport transitions from './transitions.module.css';\nimport styles from './subReq.module.css';\n\nconst SubRequestList = () => {\n\n  let [requests, setRequests] = useState(undefined);\n\n  useEffect(() => {\n    getSubsRequests().then(({data}) => setRequests(data.data));\n  }, []);\n\n  const deleteFromSubsList = id => setRequests(requests.filter(item => id !== item.id));\n\n  return (\n    <>\n      {\n        (requests && requests.length > 0) &&\n        <div className={styles.subsContainer}>\n          <span className={styles.title}>Subscription requests</span>\n          <ReactCSSTransitionGroup\n            transitionName={transitions}\n            transitionAppear={true}\n            transitionAppearTimeout={300}\n            transitionEnter={false}\n            transitionLeave={true}\n            transitionLeaveTimeout={300}>\n            <div className={styles.cardsContainer}>\n              {requests.map(item =>\n                <UserRequestCard\n                  key={item.id}\n                  user={item}\n                  deleteFromSubsList={deleteFromSubsList}\n                />\n              )}\n            </div>\n          </ReactCSSTransitionGroup>\n        </div>\n      }\n    </>\n  );\n};\n\nexport default React.memo(SubRequestList);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {Badge} from 'antd';\n\nimport DefaultAvatar from \"components/DefaultAvatar\";\nimport styles from './subReq.module.css';\n\nconst SubscriptionRequestsLabel = ({count, openList, avatar}) => (\n    <>\n        {\n            !!count &&\n            <div className={styles.subReqLabel} onClick={openList}>\n                <Badge count={count} className={styles.avatarContainer}>\n                    <div className={styles.avatar}>\n                        {\n                            avatar ? <img src={avatar} alt={'avatar'}/> :\n                                <DefaultAvatar fontSize={'30px'}/>\n                        }\n                    </div>\n                </Badge>\n                <div className={styles.infoContainer}>\n                    <span className={styles.subReqTitle}>Subscriptions</span>\n                    <span>Accept or deny</span>\n                </div>\n            </div>\n        }\n    </>\n);\n\nSubscriptionRequestsLabel.propTypes = {\n    count: PropTypes.number,\n    openList: PropTypes.func.isRequired,\n    avatar: PropTypes.string\n};\n\nexport default React.memo(SubscriptionRequestsLabel);\n","import React, {useEffect, useState} from \"react\";\nimport {getSubsRequestsPreview} from \"services/subscriptionRequests\";\nimport SubRequestList from \"./SubRequestsList\";\nimport SubscriptionRequestsLabel from \"./SubscriptionRequestsLabel\";\n\nconst SubscriptionRequests = () => {\n\n  let [isListOpen, setIsListOpen] = useState(false);\n  let [avatar, setAvatar] = useState(undefined);\n  let [count, setCount] = useState(0);\n\n  useEffect(() => {\n    getSubsRequestsPreview().then(({data: {avatar, count}}) => {\n      setAvatar(avatar);\n      setCount(count);\n    });\n  }, []);\n\n  const openList = () => setIsListOpen(true);\n\n  return (\n    <>\n      {\n        isListOpen\n          ? <SubRequestList/>\n          : <SubscriptionRequestsLabel\n            count={count}\n            avatar={avatar}\n            openList={openList}\n          />\n      }\n    </>\n  );\n};\n\nexport default SubscriptionRequests;\n","import React from \"react\";\r\nimport ExplainingLabel from \"../ExplainingLabel\";\r\nimport styles from './styles.module.css';\r\nimport {Icon} from \"antd\";\r\n\r\nconst NotificationsExplainingLabel = () => (\r\n    <div className={styles.container}>\r\n        <ExplainingLabel icon={<Icon type='bell' className={styles.icon} />} text='Notifications'>\r\n        <span className={styles.text}>\r\n            Here you can see the photos in which you are marked\r\n        </span>\r\n        </ExplainingLabel>\r\n    </div>\r\n);\r\n\r\nexport default NotificationsExplainingLabel;","import React from \"react\";\r\nimport styles from './notifications.module.css';\r\nimport stylesBlank from './notificationBlank.module.css';\r\n\r\nconst NotificationBlank = () => {\r\n    return (\r\n        <div className={styles.notificationCard}>\r\n            <div className={stylesBlank.avatarStub}/>\r\n            <div className={styles.infoWrapper}>\r\n                <div className={stylesBlank.infoContainer}>\r\n                    <span className={stylesBlank.usernameStub} style={{width: random(40, 80)}}/>\r\n                    <span className={stylesBlank.infoStub}  style={{width: random(30, 140)}}/>\r\n                    <span className={stylesBlank.infoStub}  style={{width: random(30, 140)}}/>\r\n                </div>\r\n                <span className={stylesBlank.timeStub}/>\r\n            </div>\r\n            <div className={stylesBlank.postImgStub}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst random = (min, max) =>  {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    rand = Math.floor(rand);\r\n    return rand;\r\n};\r\n\r\nexport default React.memo(NotificationBlank);","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport NotificationBlank from \"./NotificationBlank\";\r\nimport transitions from './transitions.module.css';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\n\r\nconst BlanksList = ({count}) => {\r\n    const getNotificationsBlanks = () => {\r\n        const notificationsBlanks = [];\r\n\r\n        for (let i = 0; i < count; i++)\r\n            notificationsBlanks.push(<NotificationBlank key={i}/>);\r\n\r\n        return notificationsBlanks;\r\n    };\r\n\r\n    return (\r\n        <ReactCSSTransitionGroup\r\n            transitionName={transitions}\r\n            transitionAppear={false}\r\n            transitionEnter={false}\r\n            transitionLeaveTimeout={500}>\r\n            {\r\n                getNotificationsBlanks()\r\n            }\r\n        </ReactCSSTransitionGroup>\r\n    );\r\n};\r\n\r\nBlanksList.propTypes = {\r\n    count: PropTypes.number.isRequired\r\n};\r\n\r\nexport default React.memo(BlanksList);","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\nimport styles from './notifications.module.css';\n\nconst PostLink = ({link, postSrc}) => (\n    <Link to={link} className={styles.postLink}>\n      {\n        postSrc.match('.mp4')\n          ? <video src={postSrc} className={styles.media}/>\n          : <img src={postSrc} alt={'Post mini pic'} className={styles.media}/>\n      }\n    </Link>\n);\n\nPostLink.propTypes = {\n    link: PropTypes.string,\n    postSrc: PropTypes.string.isRequired\n};\n\nexport default PostLink;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\nimport moment from \"moment\";\n\nimport DefaultAvatar from \"components/DefaultAvatar\";\nimport PostLink from \"./PostLink\";\n\nimport styles from './notifications.module.css';\n\n\nconst Notification = ({item}) => {\n  const {username, avatar, info, post_src, text, created_at} = item;\n\n  let postLink;\n\n  if (post_src)\n    postLink = `/p/${post_src.match(/.+?\\/.+?\\/(.+?)\\.+/)[1]}`;\n\n  return (\n    <div className={styles.notificationCard}>\n      <Link to={`/${username}`} className={styles.avatar}>\n        {\n          avatar ? <img src={avatar} alt={'avatar'}/> : <DefaultAvatar fontSize={'30px'}/>\n        }\n      </Link>\n      <div className={styles.infoWrapper}>\n        <div className={styles.infoContainer}>\n          <Link to={`/${username}`} className={styles.usernameLink}>\n            <span>{username}</span>\n          </Link>\n          <span>{info}</span>\n          {\n            text && <Link to={postLink} className={styles.comment}>{text}</Link>\n          }\n        </div>\n        <span className={styles.timeContainer}>\n          <time>{moment(new Date(created_at), \"YYYYMMDD\").fromNow()}</time>\n        </span>\n      </div>\n      {\n        post_src && <PostLink postSrc={post_src} link={postLink}/>\n      }\n    </div>\n  );\n};\n\nNotification.propTypes = {\n  item: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    info: PropTypes.string,\n    post_src: PropTypes.string,\n    text: PropTypes.string,\n    created_at: PropTypes.string\n  })\n};\n\nexport default Notification;\n","import React, {useCallback, useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport Paginator from \"components/Paginator/Paginator\";\nimport NotificationsExplainingLabel from \"components/ExplainingLabels/NotificationsLabel/NotificationsExplainingLabel\";\nimport BlanksList from \"./BlanksList\";\nimport Notification from \"./Notification\";\nimport styles from './notifications.module.css';\n\n\nconst NotificationsList = ({notificationsCount, dispatch, notifications}) => {\n\n  const [firstLoading, setFirstLoading] = useState(false);\n\n  const fetchNotifications = useCallback((page) =>\n    dispatch.notifications.get(page).then(data => {\n      if (!firstLoading)\n        setFirstLoading(true);\n      return data;\n    }), []);\n\n  return (\n    <>\n      <div className={notifications.length > 0 ? styles.notificationsList : ''}>\n        {\n          notifications.length > 0 && <span className={styles.title}>Notifications</span>\n        }\n        {\n          <BlanksList count={notificationsCount}/>\n        }\n        <Paginator fetcher={fetchNotifications}>\n          {\n            !!notifications && notifications.map((item, index) =>\n              <Notification key={index} item={item}/>\n            )\n          }\n        </Paginator>\n      </div>\n      {firstLoading && notifications.length === 0 && <NotificationsExplainingLabel/>}\n    </>\n  );\n};\n\nNotificationsList.propTypes = {\n  notificationsCount: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  notifications: PropTypes.array,\n};\n\nconst mapStateToProps = state => ({\n  notificationsCount: state.auth.user.notificationsCount,\n  notifications: state.notifications\n});\n\nexport default connect(mapStateToProps)(NotificationsList);\n","import React from \"react\";\nimport styles from './notifications.module.css';\nimport SubscriptionRequests from \"./SubscriptionRequests/SubscriptionRequests\";\nimport NotificationsList from \"./Notifications/NotificationsList\";\n\nconst Notifications = () => (\n    <div className={styles.notificationsContainer}>\n      <SubscriptionRequests/>\n      <NotificationsList/>\n    </div>\n);\n\nexport default Notifications;\n"],"sourceRoot":""}