{"version":3,"sources":["pages/Blacklist/Card/card.module.css","pages/Blacklist/transitions.module.css","pages/Blacklist/blacklist.module.css","pages/Blacklist/Card/Username.js","pages/Blacklist/Card/RemoveButton.js","pages/Blacklist/Card/UserCard.js","pages/Blacklist/Blacklisted/Blacklisted.js","pages/Blacklist/Blacklist.js"],"names":["module","exports","userCard","user","usernameWrapper","username","avatar","removeButton","enter","enterActive","leave","leaveActive","appear","appearActive","blacklistContainer","title","cardsList","Username","_ref","react_default","a","createElement","className","styles","RemoveButton","removeUser","onClick","DefaultAvatar","icon","type","style","fontSize","UserCard","backgroundImage","concat","UserCard_DefaultAvatar","Card_Username","Card_RemoveButton","connect","id","dispatch","react_addons_css_transition_group_default","transitionName","transitions","transitionAppear","transitionAppearTimeout","transitionEnter","transitionEnterTimeout","transitionLeave","transitionLeaveTimeout","Card_UserCard","blacklist","removeFromBlacklistAsync","state","blacklisted","users","fetchBlacklisted","useCallback","page","getBlacklisted","Paginator","fetcher","map","Blacklist_Blacklisted_Blacklisted","Object","assign","key"],"mappings":"+EACAA,EAAAC,QAAA,CAAkBC,SAAA,uBAAAC,KAAA,mBAAAC,gBAAA,8BAAAC,SAAA,uBAAAC,OAAA,qBAAAC,aAAA,kDCAlBP,EAAAC,QAAA,CAAkBO,MAAA,2BAAAC,YAAA,iCAAAC,MAAA,2BAAAC,YAAA,iCAAAC,OAAA,4BAAAC,aAAA,yDCAlBb,EAAAC,QAAA,CAAkBa,mBAAA,sCAAAC,MAAA,yBAAAC,UAAA,mKCYHC,EATE,SAAAC,GAAA,IAAEb,EAAFa,EAAEb,SAAF,OACbc,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOnB,iBACnBe,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAOlB,UAAWA,KCU5BmB,EAZM,SAAAN,GAAA,IAAEO,EAAFP,EAAEO,WAAF,OACjBN,EAAAC,EAAAC,cAAA,UACIC,UAAWC,IAAOhB,aAClBmB,QAASD,GAFb,WCgBEE,EAAgB,kBAClBR,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOjB,QACnBa,EAAAC,EAAAC,cAAAO,EAAA,GAAMC,KAAK,OAAOC,MAAO,CAACC,SAAU,YAU7BC,EA1BE,SAAAd,GAAA,IAAEZ,EAAFY,EAAEZ,OAAQD,EAAVa,EAAUb,SAAUoB,EAApBP,EAAoBO,WAApB,OACbN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOrB,UACnBiB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOpB,MAEfG,EACIa,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOjB,OAAQwB,MAAO,CAACG,gBAAe,OAAAC,OAAS5B,EAAT,QACpDa,EAAAC,EAAAC,cAACc,EAAD,MAEVhB,EAAAC,EAAAC,cAACe,EAAD,CAAU/B,SAAUA,KAEzBc,EAAAC,EAAAC,cAACgB,EAAD,CAAcZ,WAAYA,yBCqBlBa,gBA/BK,SAAApB,GAAsC,IAApCqB,EAAoCrB,EAApCqB,GAAIjC,EAAgCY,EAAhCZ,OAAQD,EAAwBa,EAAxBb,SAAUmC,EAActB,EAAdsB,SAGxC,OACIrB,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CACIsB,eAAgB,CACZlC,MAAOmC,IAAYnC,MACnBC,YAAakC,IAAYlC,YACzBC,MAAOiC,IAAYjC,MACnBC,YAAagC,IAAYhC,YACzBC,OAAQ+B,IAAY/B,OACpBC,aAAc8B,IAAY9B,cAE9B+B,kBAAkB,EAClBC,wBAAyB,IACzBC,iBAAiB,EACjBC,uBAAwB,IACxBC,iBAAiB,EACjBC,uBAAwB,KACxB9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAU5C,OAAQA,EAAQD,SAAUA,EAAUoB,WAlBnC,kBAAMe,EAASW,UAAUC,yBAAyBb,4BC6B1DD,cAJS,SAAAe,GAAK,MAAK,CAChCC,YAAaD,EAAMF,UAAUI,QAGhBjB,CA9BG,SAAApB,GAA6B,IAA3BsB,EAA2BtB,EAA3BsB,SAAUc,EAAiBpC,EAAjBoC,YAEtBE,EAAmBC,sBAAY,SAACC,GACpC,OAAOlB,EAASW,UAAUQ,eAAeD,IACxC,IAEH,OACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAWQ,IAAMhB,oBACpBK,EAAAC,EAAAC,cAAA,QAAMC,UAAWQ,IAAMf,OAAvB,aACAI,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAWC,QAASL,GAClBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAWQ,IAAMd,WAElBsC,GACAA,EAAYQ,IAAI,SAAA3D,GAAI,OAAIgB,EAAAC,EAAAC,cAAC0C,EAADC,OAAAC,OAAA,CAAaC,IAAK/D,EAAKoC,IAAQpC","file":"static/js/14.f59a2891.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userCard\":\"card_userCard__3j0Qe\",\"user\":\"card_user__1R9K7\",\"usernameWrapper\":\"card_usernameWrapper__1b05q\",\"username\":\"card_username__m1C3z\",\"avatar\":\"card_avatar__2hsIf\",\"removeButton\":\"card_removeButton__3cbaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"transitions_enter__39IP2\",\"enterActive\":\"transitions_enterActive__2JaVc\",\"leave\":\"transitions_leave__1KTLu\",\"leaveActive\":\"transitions_leaveActive__1LId1\",\"appear\":\"transitions_appear__3PCjW\",\"appearActive\":\"transitions_appearActive__3_kbl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blacklistContainer\":\"blacklist_blacklistContainer__2NAWD\",\"title\":\"blacklist_title__3izV_\",\"cardsList\":\"blacklist_cardsList__1wz72\"};","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './card.module.css';\r\n\r\nconst Username = ({username}) =>\r\n    <div className={styles.usernameWrapper}>\r\n        <span className={styles.username}>{username}</span>\r\n    </div>;\r\n\r\nUsername.propTypes = {\r\n    username: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Username;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './card.module.css';\r\n\r\nconst RemoveButton = ({removeUser}) =>\r\n    <button\r\n        className={styles.removeButton}\r\n        onClick={removeUser}\r\n    >\r\n        Remove\r\n    </button>;\r\n\r\nRemoveButton.propTypes = {\r\n    removeUser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default RemoveButton;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './card.module.css';\r\nimport {Icon} from \"antd\";\r\nimport Username from \"./Username\";\r\nimport RemoveButton from \"./RemoveButton\";\r\n\r\nconst UserCard = ({avatar, username, removeUser}) => (\r\n    <div className={styles.userCard}>\r\n        <div className={styles.user}>\r\n            {\r\n                avatar ?\r\n                    <div className={styles.avatar} style={{backgroundImage: `url(${avatar})`}}/>\r\n                    : <DefaultAvatar/>\r\n            }\r\n            <Username username={username}/>\r\n        </div>\r\n       <RemoveButton removeUser={removeUser}/>\r\n    </div>\r\n);\r\n\r\nconst DefaultAvatar = () => (\r\n    <div className={styles.avatar}>\r\n        <Icon type='user' style={{fontSize: '50px'}}/>\r\n    </div>\r\n);\r\n\r\nUserCard.propTypes = {\r\n    avatar: PropTypes.string,\r\n    username: PropTypes.string.isRequired,\r\n    removeUser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserCard;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport UserCard from \"../Card/UserCard\";\nimport transitions from '../transitions.module.css';\n\nconst Blacklisted = ({id, avatar, username, dispatch}) => {\n    const removeUser = () => dispatch.blacklist.removeFromBlacklistAsync(id);\n\n    return (\n        <ReactCSSTransitionGroup\n            transitionName={{\n                enter: transitions.enter,\n                enterActive: transitions.enterActive,\n                leave: transitions.leave,\n                leaveActive: transitions.leaveActive,\n                appear: transitions.appear,\n                appearActive: transitions.appearActive\n            }}\n            transitionAppear={true}\n            transitionAppearTimeout={400}\n            transitionEnter={true}\n            transitionEnterTimeout={400}\n            transitionLeave={true}\n            transitionLeaveTimeout={400}>\n            <UserCard avatar={avatar} username={username} removeUser={removeUser}/>\n        </ReactCSSTransitionGroup>\n    );\n};\n\nBlacklisted.propTypes = {\n    id: PropTypes.number.isRequired,\n    avatar: PropTypes.string,\n    username: PropTypes.string.isRequired,\n    dispatch: PropTypes.func.isRequired\n};\n\nexport default connect()(Blacklisted);\n","import React, {useCallback} from \"react\";\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport Paginator from \"components/Paginator/Paginator\";\nimport Blacklisted from \"./Blacklisted/Blacklisted\";\nimport style from './blacklist.module.css';\n\nconst Blacklist = ({dispatch, blacklisted}) => {\n\n  const fetchBlacklisted = useCallback((page) => {\n    return dispatch.blacklist.getBlacklisted(page);\n  }, []);\n\n  return (\n    <div className={style.blacklistContainer}>\n      <span className={style.title}>Blacklist</span>\n      <Paginator fetcher={fetchBlacklisted}>\n        <div className={style.cardsList}>\n          {\n            blacklisted &&\n            blacklisted.map(user => <Blacklisted key={user.id} {...user}/>)\n          }\n        </div>\n      </Paginator>\n    </div>\n  );\n};\n\nBlacklist.propTypes = {\n  blackListed: PropTypes.array,\n  dispatch: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  blacklisted: state.blacklist.users\n});\n\nexport default connect(mapStateToProps)(Blacklist);\n"],"sourceRoot":""}